/* -*-c++-*- */
/* osgEarth - Dynamic map generation toolkit for OpenSceneGraph
* Copyright 2008-2012 Pelican Mapping
* http://osgearth.org
*
* osgEarth is free software; you can redistribute it and/or modify
* it under the terms of the GNU Lesser General Public License as published by
* the Free Software Foundation; either version 2 of the License, or
* (at your option) any later version.
*
* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
* IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
* FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
* AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
* LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
* FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
* IN THE SOFTWARE.
*
* You should have received a copy of the GNU Lesser General Public License
* along with this program.  If not, see <http://www.gnu.org/licenses/>
*/
#ifndef OSGEARTH_SPLAT_SPLAT_LAYER_H
#define OSGEARTH_SPLAT_SPLAT_LAYER_H

#include "Export"
#include "Coverage"
#include "Zone"

#include <osgEarth/Layer>

using namespace osgEarth;

namespace osgEarth { namespace Splat
{
    /**
     * Layer that renders splatted terrain tiles
     */
    class OSGEARTHSPLAT_EXPORT SplatLayer : public Layer
    {
    public:
        /** constructor */
        SplatLayer();

        /**
         * Coverage source
         */
        void setCoverage(Coverage* coverage) { _coverage = coverage; }
        Coverage* getCoverage() const { return _coverage.get(); }

        /**
         * Splatting zones
         */
        void setZones(const Zones& zones) { _zones = zones; }
        const Zones& getZones() const { return _zones; }


    protected:
        virtual ~SplatLayer() { }

        osg::ref_ptr<Coverage> _coverage;
        Zones                  _zones;

    };

} } // namespace osgEarth::Splat

#endif // OSGEARTH_SPLAT_SPLAT_LAYER_FACTORY_H
